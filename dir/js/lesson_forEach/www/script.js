/**
 * Метод forEach позволяет последовательно перебрать все элементы массива.
 * Метод в параметре получает функцию, которая выполнится для каждого элемента массива. В эту функцию можно передавать 3 параметра.
 * Если эти параметры есть (они не обязательны), то в первый автоматически попадет элемент массива, во второй попадет его номер в массиве (индекс), а в третий - сам массив.
 */

/**
 * Синтаксис
 * массив.forEach(function(элемент, индекс, массив) {
 * 	код, который выполнится для всех элементов
 * })
 * Пример 1
 * Давайте выведем столбец элементов массива. Для этого в анонимную функцию передадим первый параметр elem (назвать его можно как угодно). В эту переменную последовательно будут попадать элементы массива:
 */
let arr = ['a', 'b', 'c', 'd', 'e'];
arr.forEach(function(elem) {
	document.write(elem + '<br>');
});
document.write('<hr>');

/**
 * Пример 2
 * Давайте теперь кроме элементов массива выведем еще и их номера. Для этого сделаем вторую переменную index, в которую будут попадать номера наших элементов:
 */
let arr2 = ['a', 'b', 'c', 'd', 'e'];
arr2.forEach(function(elem, index) {
	document.write(index + '. ' + elem + '<br>');
});
document.write('<hr>');

/**
 * Пример 3
 * При необходимости в третий параметр можно передать сам массив:
 */
let arr3 = ['a', 'b', 'c', 'd', 'e'];
arr3.forEach(function(elem, index, arr) {
	document.write(arr3);
});
document.write('<hr>');

/**
 * Пример 4. Применение
 * Дан массив. Давайте найдем сумму элементов этого массива:
 */
let arr4 = [1, 2, 3, 4, 5];
let sum = 0;
arr4.forEach(function(elem) {
	sum += elem;
});
console.log(sum);