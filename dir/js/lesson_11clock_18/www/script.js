/* 
МЕТОДЫ МАССИВОВ
Добавление/удаление элементов

arr.push(...items) – добавляет элементы в конец: */
let arr1 = ["I", "go", "home"];
arr1.push("INSERT"); // добавить "4" в конец массива 
document.writeln( arr1 , "<br>" );

/* 
arr.pop() – извлекает элемент из конца: */
let arr2 = ["I", "go", "home"];
const removedElement1 = arr2.pop();
document.writeln( arr2 , "<br>", "Удаленный элемент - ", removedElement1, "<br>" );

/*
arr.unshift(...items) – добавляет элементы в начало: */
let arr3 = ["I", "go", "home"];
arr3.unshift("INSERT");
document.writeln( arr3 , "<br>" );

/*
arr.shift() – извлекает элемент из начала: */
let arr4 = ["I", "go", "home"];
const removedElement2 = arr4.shift();
document.writeln( arr4 , "<br>", "Удаленный элемент - ", removedElement2, "<br>" );

/*
arr.forEach(function(item, index, array) - метод arr.forEach позволяет запускать функцию для каждого элемента массива: */
// Вызов document.writeln для каждого элемента
let arr5 = ["Bilbo", "Gandalf", "Nazgul"]
arr5.forEach(el => document.writeln(el, " - "));
document.writeln( "<br>" );
let arr6 = ["Bilbo", "Gandalf", "Nazgul"]
arr6.forEach((item, index, array) => {
    document.writeln(`${item} имеет позицию ${index} в ${array}`, "<br>");
  });

/*
splice
Как удалить элемент из массива?
Так как массивы – это объекты, то можно попробовать delete: */
let arr7 = ["I", "go", "home"];
delete arr7[1]; // удалить "go"
document.writeln( arr7[1] , "<br>"); // undefined
// теперь arr = ["I",  , "home"];
document.writeln( arr7.length , "<br>"); // 3
/* 
Вроде бы, элемент и был удалён, но при проверке оказывается, что массив всё ещё имеет 3 элемента arr.length == 3.
Это нормально, потому что всё, что делает delete obj.key – это удаляет значение с данным ключом key. Это нормально для объектов, но для массивов мы обычно хотим, чтобы оставшиеся элементы сдвинулись и заняли освободившееся место. Мы ждём, что массив станет короче.
Поэтому для этого нужно использовать специальные методы.

Метод arr.splice(str) – это универсальный «швейцарский нож» для работы с массивами. Умеет всё: добавлять, удалять и заменять элементы.
Его синтаксис:
arr.splice(index[, deleteCount, elem1, ..., elemN])
Он начинает с позиции index, удаляет deleteCount элементов и вставляет elem1, ..., elemN на их место. Возвращает массив из удалённых элементов.
Этот метод проще всего понять, рассмотрев примеры.

Начнём с удаления: */
let arr8 = ["Я", "изучаю", "JavaScript"];
arr8.splice(1, 1); // начиная с позиции 1, удалить 1 элемент
document.writeln( arr8 , "<br>"); // осталось ["Я", "JavaScript"]

/*  
Легко, правда? Начиная с позиции 1, он убрал 1 элемент.

В следующем примере мы удалим 3 элемента и заменим их двумя другими. */
let arr9 = ["Я", "изучаю", "JavaScript", "прямо", "сейчас"];
// удалить 3 первых элемента и заменить их другими
arr9.splice(0, 3, "Давай", "танцевать");
document.writeln( arr9 , "<br>") // теперь ["Давай", "танцевать", "прямо", "сейчас"]

/*  
Здесь видно, что splice возвращает массив из удалённых элементов: */
let arr10 = ["Я", "изучаю", "JavaScript", "прямо", "сейчас"];
// удалить 2 первых элемента
let removed = arr10.splice(0, 2);
document.writeln( removed , "<br>"); // "Я", "изучаю" <-- массив из удалённых элементов

/*  
Метод splice также может вставлять элементы без удаления, для этого достаточно установить deleteCount в 0: */
let arr11 = ["Я", "изучаю", "JavaScript"];
// с позиции 2
// удалить 0 элементов
// вставить "сложный", "язык"
arr11.splice(2, 0, "сложный", "язык");
document.writeln( arr11 , "<br>"); // "Я", "изучаю", "сложный", "язык", "JavaScript"

/* 
Отрицательные индексы разрешены
В этом и в других методах массива допускается использование отрицательного индекса. Он позволяет начать отсчёт элементов с конца, как тут: */

let arr12 = [1, 2, 5];
// начиная с индекса -1 (перед последним элементом)
// удалить 0 элементов,
// затем вставить числа 3 и 4
arr12.splice(-1, 0, 3, 4);
document.writeln( arr12 ); // 1,2,3,4,5

